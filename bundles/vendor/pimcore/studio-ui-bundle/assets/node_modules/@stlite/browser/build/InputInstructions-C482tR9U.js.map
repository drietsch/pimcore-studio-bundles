{"version":3,"file":"InputInstructions-C482tR9U.js","sources":["../../../streamlit/frontend/lib/src/components/shared/InputInstructions/styled-components.ts","../../../streamlit/frontend/lib/src/components/shared/InputInstructions/InputInstructions.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { keyframes } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\n\nconst blink = keyframes`\n  50% {\n    color: rgba(0, 0, 0, 0);\n  }\n`\n\nexport interface StyledMessageProps {\n  includeDot: boolean\n  shouldBlink: boolean\n}\n\nexport const StyledMessage = styled.span<StyledMessageProps>(\n  ({ includeDot, shouldBlink, theme }) => ({\n    ...(includeDot\n      ? {\n          \"&::before\": {\n            opacity: 1,\n            content: '\"•\"',\n            animation: \"none\",\n            color: theme.colors.gray,\n            margin: `0 ${theme.spacing.twoXS}`,\n          },\n        }\n      : {}),\n    ...(shouldBlink\n      ? {\n          color: theme.colors.red,\n          animationName: `${blink}`,\n          animationDuration: \"0.5s\",\n          animationIterationCount: 5,\n        }\n      : {}),\n  })\n)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\n\nimport { isFromMac } from \"@streamlit/lib/src/util/utils\"\nimport { StyledWidgetInstructions } from \"@streamlit/lib/src/components/widgets/BaseWidget\"\n\nimport { StyledMessage } from \"./styled-components\"\n\nexport interface Props {\n  dirty: boolean\n  value: string\n  inForm: boolean\n  maxLength?: number\n  className?: string\n  type?: \"multiline\" | \"single\" | \"chat\"\n  allowEnterToSubmit?: boolean\n}\n\nconst InputInstructions = ({\n  dirty,\n  value,\n  inForm,\n  maxLength,\n  className,\n  type = \"single\",\n  allowEnterToSubmit = true,\n}: Props): ReactElement => {\n  const messages: ReactElement[] = []\n  const addMessage = (text: string, shouldBlink = false): void => {\n    messages.push(\n      <StyledMessage\n        key={messages.length}\n        includeDot={messages.length > 0}\n        shouldBlink={shouldBlink}\n      >\n        {text}\n      </StyledMessage>\n    )\n  }\n\n  // Show enter instruction if not a form or form allows Enter to submit\n  if (allowEnterToSubmit) {\n    const toSubmitFormOrApplyText = inForm ? \"submit form\" : \"apply\"\n    if (type === \"multiline\") {\n      const commandKey = isFromMac() ? \"⌘\" : \"Ctrl\"\n      addMessage(`Press ${commandKey}+Enter to ${toSubmitFormOrApplyText}`)\n    } else if (type === \"single\") {\n      addMessage(`Press Enter to ${toSubmitFormOrApplyText}`)\n    }\n  }\n\n  if (maxLength && (type !== \"chat\" || dirty)) {\n    addMessage(\n      `${value.length}/${maxLength}`,\n      dirty && value.length >= maxLength\n    )\n  }\n\n  return (\n    <StyledWidgetInstructions\n      data-testid=\"InputInstructions\"\n      className={className}\n    >\n      {messages}\n    </StyledWidgetInstructions>\n  )\n}\n\nexport default InputInstructions\n"],"names":["blink","keyframes","StyledMessage","target","includeDot","shouldBlink","theme","opacity","content","animation","color","colors","gray","margin","spacing","twoXS","red","animationName","animationDuration","animationIterationCount","InputInstructions","dirty","value","inForm","maxLength","className","type","allowEnterToSubmit","messages","addMessage","text","push","jsx","length","toSubmitFormOrApplyText","commandKey","isFromMac","StyledWidgetInstructions"],"mappings":";AAmBA,MAAMA,IAAQC;AAAAA;AAAAA;AAAAA;AAAAA,GAWDC,8BAAgB;AAAA,EAAAC,QAAA;AAAA,CAAA,EAC3B,CAAC;AAAA,EAAEC,YAAAA;AAAAA,EAAYC,aAAAA;AAAAA,EAAaC,OAAAA;AAAM,OAAO;AAAA,EACvC,GAAIF,IACA;AAAA,IACE,aAAa;AAAA,MACXG,SAAS;AAAA,MACTC,SAAS;AAAA,MACTC,WAAW;AAAA,MACXC,OAAOJ,EAAMK,OAAOC;AAAAA,MACpBC,QAAQ,KAAKP,EAAMQ,QAAQC,KAAK;AAAA,IAAA;AAAA,EAClC,IAEF,CAAC;AAAA,EACL,GAAIV,IACA;AAAA,IACEK,OAAOJ,EAAMK,OAAOK;AAAAA,IACpBC,eAAe,GAAGjB,CAAK;AAAA,IACvBkB,mBAAmB;AAAA,IACnBC,yBAAyB;AAAA,EAAA,IAE3B,CAAA;AACN,MACF,GCnBMC,IAAoBA,CAAC;AAAA,EACzBC,OAAAA;AAAAA,EACAC,OAAAA;AAAAA,EACAC,QAAAA;AAAAA,EACAC,WAAAA;AAAAA,EACAC,WAAAA;AAAAA,EACAC,MAAAA,IAAO;AAAA,EACPC,oBAAAA,IAAqB;AAChB,MAAoB;AACzB,QAAMC,IAA2B,CAAE,GAC7BC,IAAaA,CAACC,GAAczB,IAAc,OAAgB;AACrD0B,IAAAA,EAAAA,KACNC,gBAAAA,EAAA,IAAA9B,GAAA,EAEC,YAAY0B,EAASK,SAAS,GAC9B,aAAA5B,GAECyB,UAAAA,EAAAA,GAJIF,EAASK,MAKhB,CACF;AAAA,EACF;AAGA,MAAIN,GAAoB;AAChBO,UAAAA,IAA0BX,IAAS,gBAAgB;AACzD,QAAIG,MAAS,aAAa;AAClBS,YAAAA,IAAaC,MAAc,MAAM;AACvCP,MAAAA,EAAW,SAASM,CAAU,aAAaD,CAAuB,EAAE;AAAA,IAAA,MACtE,CAAWR,MAAS,YACPG,EAAA,kBAAkBK,CAAuB,EAAE;AAAA,EACxD;AAGEV,SAAAA,MAAcE,MAAS,UAAUL,MAEjCQ,EAAA,GAAGP,EAAMW,MAAM,IAAIT,CAAS,IAC5BH,KAASC,EAAMW,UAAUT,CAC3B,GAICQ,gBAAAA,EAAA,IAAAK,GAAA,EACC,eAAY,qBACZ,WAAAZ,GAECG,UACHA,GAAA;AAEJ;"}