{"version":3,"file":"index-C3FvbUPw.js","sources":["../../../node_modules/@emotion-icons/material-rounded/Send/Send.esm.js","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/styled-components.ts","../../../streamlit/frontend/lib/src/components/widgets/ChatInput/ChatInput.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var Send = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: 24,\n    height: 24,\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 5.51v3.71c0 .46.31.86.76.97L11 12l-7.24 1.81c-.45.11-.76.51-.76.97v3.71c0 .72.73 1.2 1.39.92l15.42-6.49c.82-.34.82-1.5 0-1.84L4.39 4.58C3.73 4.31 3 4.79 3 5.51z\"\n  }));\n});\nSend.displayName = 'Send';\nexport var SendDimensions = {\n  height: 24,\n  width: 24\n};","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport styled from \"@emotion/styled\"\n\nimport { hasLightBackgroundColor } from \"@streamlit/lib/src/theme\"\n\nexport interface StyledChatInputContainerProps {\n  width: number\n}\n\nexport const StyledChatInputContainer =\n  styled.div<StyledChatInputContainerProps>(({ theme, width }) => {\n    return {\n      borderRadius: theme.radii.default,\n      display: \"flex\",\n      backgroundColor:\n        theme.colors.widgetBackgroundColor ?? theme.colors.secondaryBg,\n      width: `${width}px`,\n    }\n  })\n\nexport const StyledChatInput = styled.div(({ theme }) => {\n  return {\n    backgroundColor: theme.colors.transparent,\n    position: \"relative\",\n    flexGrow: 1,\n    borderRadius: theme.radii.default,\n    display: \"flex\",\n    alignItems: \"center\",\n  }\n})\n\ninterface StyledSendIconButtonProps {\n  disabled: boolean\n  extended: boolean\n}\n\nexport const StyledSendIconButton = styled.button<StyledSendIconButtonProps>(\n  ({ theme, disabled, extended }) => {\n    const lightTheme = hasLightBackgroundColor(theme)\n    const [cleanIconColor, dirtyIconColor] = lightTheme\n      ? [theme.colors.gray60, theme.colors.gray80]\n      : [theme.colors.gray80, theme.colors.gray40]\n    return {\n      border: \"none\",\n      backgroundColor: theme.colors.transparent,\n      borderTopRightRadius: extended ? \"0\" : theme.radii.default,\n      borderTopLeftRadius: extended ? theme.radii.default : \"0\",\n      borderBottomRightRadius: theme.radii.default,\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      lineHeight: theme.lineHeights.none,\n      margin: theme.spacing.none,\n      padding: theme.spacing.sm,\n      color: disabled ? cleanIconColor : dirtyIconColor,\n      pointerEvents: \"auto\",\n      \"&:focus\": {\n        outline: \"none\",\n      },\n      \":focus\": {\n        outline: \"none\",\n      },\n      \"&:focus-visible\": {\n        backgroundColor: lightTheme\n          ? theme.colors.gray10\n          : theme.colors.gray90,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.colors.primary,\n        color: theme.colors.white,\n      },\n      \"&:disabled, &:disabled:hover, &:disabled:active\": {\n        backgroundColor: theme.colors.transparent,\n        borderColor: theme.colors.transparent,\n        color: theme.colors.gray,\n      },\n    }\n  }\n)\n\nexport const StyledSendIconButtonContainer = styled.div({\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  height: \"100%\",\n  position: \"absolute\",\n  right: 0,\n  pointerEvents: \"none\",\n})\n\nexport const StyledInputInstructionsContainer = styled.div(({ theme }) => ({\n  position: \"absolute\",\n  bottom: \"0px\",\n  // Calculate the right padding to account for the send icon (iconSizes.xl + 2 * spacing.sm)\n  // and some additional margin between the icon and the text (spacing.sm).\n  right: `calc(${theme.iconSizes.xl} + 2 * ${theme.spacing.sm} + ${theme.spacing.sm})`,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\nimport { useTheme } from \"@emotion/react\"\nimport { Send } from \"@emotion-icons/material-rounded\"\nimport { Textarea as UITextArea } from \"baseui/textarea\"\n\nimport { ChatInput as ChatInputProto } from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport Icon from \"@streamlit/lib/src/components/shared/Icon\"\nimport InputInstructions from \"@streamlit/lib/src/components/shared/InputInstructions/InputInstructions\"\nimport { isEnterKeyPressed } from \"@streamlit/lib/src/util/inputUtils\"\n\nimport {\n  StyledChatInput,\n  StyledChatInputContainer,\n  StyledInputInstructionsContainer,\n  StyledSendIconButton,\n  StyledSendIconButtonContainer,\n} from \"./styled-components\"\n\nexport interface Props {\n  disabled: boolean\n  element: ChatInputProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\n// We want to show easily that there's scrolling so we deliberately choose\n// a half size.\nconst MAX_VISIBLE_NUM_LINES = 6.5\n// Rounding errors can arbitrarily create scrollbars. We add a rounding offset\n// to manage it better.\nconst ROUNDING_OFFSET = 1\n\nfunction ChatInput({\n  width,\n  element,\n  widgetMgr,\n  fragmentId,\n}: Props): React.ReactElement {\n  const theme = useTheme()\n  // True if the user-specified state.value has not yet been synced to the WidgetStateManager.\n  const [dirty, setDirty] = useState(false)\n  // The value specified by the user via the UI. If the user didn't touch this widget's UI, the default value is used.\n  const [value, setValue] = useState(element.default)\n  // The value of the height of the textarea. It depends on a variety of factors including the default height, and autogrowing\n  const [scrollHeight, setScrollHeight] = useState(0)\n  const chatInputRef = useRef<HTMLTextAreaElement>(null)\n  const heightGuidance = useRef({ minHeight: 0, maxHeight: 0 })\n\n  const getScrollHeight = (): number => {\n    let scrollHeight = 0\n    const { current: textarea } = chatInputRef\n    if (textarea) {\n      const placeholder = textarea.placeholder\n      textarea.placeholder = \"\"\n      textarea.style.height = \"auto\"\n      scrollHeight = textarea.scrollHeight\n      textarea.placeholder = placeholder\n      textarea.style.height = \"\"\n    }\n\n    return scrollHeight\n  }\n\n  const handleSubmit = (): void => {\n    // We want the chat input to always be in focus\n    // even if the user clicks the submit button\n    if (chatInputRef.current) {\n      chatInputRef.current.focus()\n    }\n\n    if (!value) {\n      return\n    }\n\n    widgetMgr.setStringTriggerValue(\n      element,\n      value,\n      { fromUi: true },\n      fragmentId\n    )\n    setDirty(false)\n    setValue(\"\")\n    setScrollHeight(0)\n  }\n\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\n    const { metaKey, ctrlKey, shiftKey } = e\n    const shouldSubmit =\n      isEnterKeyPressed(e) && !shiftKey && !ctrlKey && !metaKey\n\n    if (shouldSubmit) {\n      e.preventDefault()\n\n      handleSubmit()\n    }\n  }\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = e.target\n    const { maxChars } = element\n\n    if (maxChars !== 0 && value.length > maxChars) {\n      return\n    }\n\n    setDirty(value !== \"\")\n    setValue(value)\n    setScrollHeight(getScrollHeight())\n  }\n\n  useEffect(() => {\n    if (element.setValue) {\n      // We are intentionally setting this to avoid regularly calling this effect.\n      // TODO: Update to match React best practices\n      // eslint-disable-next-line react-compiler/react-compiler\n      element.setValue = false\n      const val = element.value || \"\"\n      setValue(val)\n      setDirty(val !== \"\")\n    }\n  }, [element])\n\n  useEffect(() => {\n    if (chatInputRef.current) {\n      const { offsetHeight } = chatInputRef.current\n      heightGuidance.current.minHeight = offsetHeight\n      heightGuidance.current.maxHeight = offsetHeight * MAX_VISIBLE_NUM_LINES\n    }\n  }, [chatInputRef])\n\n  const { disabled, placeholder, maxChars } = element\n  const { minHeight, maxHeight } = heightGuidance.current\n\n  const isInputExtended =\n    scrollHeight > 0 && chatInputRef.current\n      ? Math.abs(scrollHeight - minHeight) > ROUNDING_OFFSET\n      : false\n\n  return (\n    <StyledChatInputContainer\n      className=\"stChatInput\"\n      data-testid=\"stChatInput\"\n      width={width}\n    >\n      <StyledChatInput>\n        <UITextArea\n          inputRef={chatInputRef}\n          value={value}\n          placeholder={placeholder}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          aria-label={placeholder}\n          disabled={disabled}\n          rows={1}\n          overrides={{\n            Root: {\n              style: {\n                minHeight: theme.sizes.minElementHeight,\n                outline: \"none\",\n                backgroundColor: theme.colors.transparent,\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                borderLeftWidth: theme.sizes.borderWidth,\n                borderRightWidth: theme.sizes.borderWidth,\n                borderTopWidth: theme.sizes.borderWidth,\n                borderBottomWidth: theme.sizes.borderWidth,\n                width: `${width}px`,\n              },\n            },\n            InputContainer: {\n              style: {\n                backgroundColor: theme.colors.transparent,\n              },\n            },\n            Input: {\n              props: {\n                \"data-testid\": \"stChatInputTextArea\",\n              },\n              style: {\n                lineHeight: theme.lineHeights.inputWidget,\n                backgroundColor: theme.colors.transparent,\n                // Disable resizing via drag and drop\n                resize: \"none\",\n                \"::placeholder\": {\n                  opacity: \"0.7\",\n                },\n                height: isInputExtended\n                  ? `${scrollHeight + ROUNDING_OFFSET}px`\n                  : \"auto\",\n                maxHeight: maxHeight ? `${maxHeight}px` : \"none\",\n                // Baseweb requires long-hand props, short-hand leads to weird bugs & warnings.\n                paddingLeft: theme.spacing.sm,\n                paddingBottom: theme.spacing.sm,\n                paddingTop: theme.spacing.sm,\n                // Calculate the right padding to account for the send icon (iconSizes.xl + 2 * spacing.sm)\n                // and some additional margin between the icon and the text (spacing.sm).\n                paddingRight: `calc(${theme.iconSizes.xl} + 2 * ${theme.spacing.sm} + ${theme.spacing.sm})`,\n              },\n            },\n          }}\n        />\n        {/* Hide the character limit in small widget sizes */}\n        {width > theme.breakpoints.hideWidgetDetails && (\n          <StyledInputInstructionsContainer>\n            <InputInstructions\n              dirty={dirty}\n              value={value}\n              maxLength={maxChars}\n              type=\"chat\"\n              // Chat Input are not able to be used in forms\n              inForm={false}\n            />\n          </StyledInputInstructionsContainer>\n        )}\n        <StyledSendIconButtonContainer>\n          <StyledSendIconButton\n            onClick={handleSubmit}\n            disabled={!dirty || disabled}\n            extended={isInputExtended}\n            data-testid=\"stChatInputSubmitButton\"\n          >\n            <Icon content={Send} size=\"xl\" color=\"inherit\" />\n          </StyledSendIconButton>\n        </StyledSendIconButtonContainer>\n      </StyledChatInput>\n    </StyledChatInputContainer>\n  )\n}\n\nexport default ChatInput\n"],"names":["Send","React.forwardRef","props","ref","attrs","React.createElement","EmotionIconBase","_extends","StyledChatInputContainer","target","theme","width","borderRadius","radii","default","display","backgroundColor","colors","widgetBackgroundColor","secondaryBg","StyledChatInput","transparent","position","flexGrow","alignItems","StyledSendIconButton","disabled","extended","lightTheme","hasLightBackgroundColor","cleanIconColor","dirtyIconColor","gray60","gray80","gray40","border","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","justifyContent","lineHeight","lineHeights","none","margin","spacing","padding","sm","color","pointerEvents","outline","gray10","gray90","primary","white","borderColor","gray","StyledSendIconButtonContainer","name","styles","StyledInputInstructionsContainer","bottom","right","iconSizes","xl","MAX_VISIBLE_NUM_LINES","ROUNDING_OFFSET","ChatInput","element","widgetMgr","fragmentId","useTheme","dirty","setDirty","useState","value","setValue","scrollHeight","setScrollHeight","chatInputRef","useRef","heightGuidance","minHeight","maxHeight","getScrollHeight","current","textarea","placeholder","style","height","handleSubmit","focus","setStringTriggerValue","fromUi","handleKeyDown","e","metaKey","ctrlKey","shiftKey","isEnterKeyPressed","preventDefault","handleChange","maxChars","length","useEffect","val","offsetHeight","isInputExtended","Math","abs","jsx","UITextArea","Root","sizes","minElementHeight","borderLeftWidth","borderWidth","borderRightWidth","borderTopWidth","borderBottomWidth","InputContainer","Input","inputWidget","resize","opacity","paddingLeft","paddingBottom","paddingTop","paddingRight","breakpoints","hideWidgetDetails","InputInstructions","Icon"],"mappings":"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","x_google_ignoreList":[0]}