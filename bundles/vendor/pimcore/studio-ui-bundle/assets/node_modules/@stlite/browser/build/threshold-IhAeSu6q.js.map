{"version":3,"file":"threshold-IhAeSu6q.js","sources":["../../../node_modules/d3-array/src/ascending.js","../../../node_modules/d3-array/src/descending.js","../../../node_modules/d3-array/src/bisector.js","../../../node_modules/d3-array/src/number.js","../../../node_modules/d3-array/src/bisect.js","../../../node_modules/d3-array/src/ticks.js","../../../node_modules/d3-format/src/formatDecimal.js","../../../node_modules/d3-format/src/exponent.js","../../../node_modules/d3-format/src/formatGroup.js","../../../node_modules/d3-format/src/formatNumerals.js","../../../node_modules/d3-format/src/formatSpecifier.js","../../../node_modules/d3-format/src/formatTrim.js","../../../node_modules/d3-format/src/formatPrefixAuto.js","../../../node_modules/d3-format/src/formatRounded.js","../../../node_modules/d3-format/src/formatTypes.js","../../../node_modules/d3-format/src/identity.js","../../../node_modules/d3-format/src/locale.js","../../../node_modules/d3-format/src/defaultLocale.js","../../../node_modules/d3-format/src/precisionFixed.js","../../../node_modules/d3-format/src/precisionPrefix.js","../../../node_modules/d3-format/src/precisionRound.js","../../../node_modules/d3-scale/src/init.js","../../../node_modules/d3-interpolate/src/numberArray.js","../../../node_modules/d3-interpolate/src/array.js","../../../node_modules/d3-interpolate/src/date.js","../../../node_modules/d3-interpolate/src/object.js","../../../node_modules/d3-interpolate/src/value.js","../../../node_modules/d3-interpolate/src/round.js","../../../node_modules/d3-scale/src/constant.js","../../../node_modules/d3-scale/src/number.js","../../../node_modules/d3-scale/src/continuous.js","../../../node_modules/d3-scale/src/tickFormat.js","../../../node_modules/d3-scale/src/linear.js","../../../node_modules/d3-scale/src/threshold.js"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n"],"names":["ascending","a","b","descending","bisector","f","compare1","compare2","delta","d","x","zero","left","lo","hi","mid","right","center","i","number","numbers","values","valueof","value","index","ascendingBisect","bisectRight","bisectLeft","e10","e5","e2","tickSpec","start","stop","count","step","power","error","factor","i1","i2","inc","ticks","reverse","n","tickIncrement","tickStep","formatDecimal","formatDecimalParts","p","coefficient","exponent","formatGroup","grouping","thousands","width","t","j","g","length","formatNumerals","numerals","re","formatSpecifier","specifier","match","FormatSpecifier","formatTrim","s","out","i0","prefixExponent","formatPrefixAuto","formatRounded","formatTypes","identity$1","map","prefixes","formatLocale","locale","group","identity","currencyPrefix","currencySuffix","decimal","percent","minus","nan","newFormat","fill","align","sign","symbol","comma","precision","trim","type","prefix","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","c","valueNegative","padding","formatPrefix","e","k","defaultLocale","definition","precisionFixed","precisionPrefix","precisionRound","max","initRange","domain","range","initInterpolator","interpolator","numberArray","isNumberArray","array","genericArray","nb","na","date","object","interpolate","constant","color","rgb","string","interpolateRound","constants","unit","normalize","clamper","bimap","d0","d1","r0","r1","polymap","r","bisect","copy","source","target","transformer","interpolateValue","transform","untransform","unknown","clamp","piecewise","output","input","rescale","scale","y","interpolateNumber","_","u","continuous","tickFormat","linearish","prestep","maxIter","linear","threshold"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}