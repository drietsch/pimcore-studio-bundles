{"version":3,"file":"RenderInPortalIfExists-CYnbu1pb.js","sources":["../../../streamlit/frontend/lib/src/components/elements/Particles/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/Particles/Particles.tsx","../../../streamlit/frontend/lib/src/components/core/Portal/RenderInPortalIfExists.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledParticles = styled.div({\n  \"@media print\": {\n    display: \"none\",\n  },\n})\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo } from \"react\"\n\nimport range from \"lodash/range\"\n\nimport { StyledParticles } from \"./styled-components\"\n\nexport interface ParticleProps {\n  particleType: number\n}\n\nexport interface Props {\n  className: string\n  scriptRunId: string\n  numParticles: number\n  numParticleTypes: number\n  ParticleComponent: FC<React.PropsWithChildren<ParticleProps>>\n}\n\nconst Particles: FC<React.PropsWithChildren<Props>> = ({\n  className,\n  scriptRunId,\n  numParticles,\n  numParticleTypes,\n  ParticleComponent,\n}: Props) => (\n  // Keys should be unique each time, so React replaces the images in the DOM and their animations\n  // actually rerun.\n  <StyledParticles className={className} data-testid={className}>\n    {range(numParticles).map(i => {\n      const randNum = Math.floor(Math.random() * numParticleTypes)\n\n      return <ParticleComponent key={scriptRunId + i} particleType={randNum} />\n    })}\n  </StyledParticles>\n)\n\nexport default memo(Particles)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, PropsWithChildren, useContext } from \"react\"\n\nimport { createPortal } from \"react-dom\"\n\nimport { PortalContext } from \"./PortalContext\"\n\nexport const RenderInPortalIfExists: FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const portalElement = useContext(PortalContext)?.()\n\n  return portalElement ? (\n    createPortal(children, portalElement)\n  ) : (\n    <>{children}</>\n  )\n}\n"],"names":["StyledParticles","target","name","styles","Particles","className","scriptRunId","numParticles","numParticleTypes","ParticleComponent","jsx","range","map","i","randNum","Math","floor","random","memo","RenderInPortalIfExists","children","portalElement","useContext","PortalContext","createPortal"],"mappings":";AAkBaA,MAAAA,6BAAkB;AAAA,EAAAC,QAAA;AAAA,CAAA,EAAA;AAAA,EAAAC,MAAA;AAAA,EAAAC,QAAA;AAAA,CAI9B,GCYKC,IAAgDA,CAAC;AAAA,EACrDC,WAAAA;AAAAA,EACAC,aAAAA;AAAAA,EACAC,cAAAA;AAAAA,EACAC,kBAAAA;AAAAA,EACAC,mBAAAA;AACK;AAAA;AAAA;AAAA,EAGLC,gBAAAA,EAAAA,IAACV,KAAgB,WAAAK,GAAsB,eAAaA,GACjDM,UAAMJ,EAAAA,CAAY,EAAEK,IAAIC,CAAKA,MAAA;AAC5B,UAAMC,IAAUC,KAAKC,MAAMD,KAAKE,WAAWT,CAAgB;AAE3D,WAAQE,gBAAAA,EAAAA,IAAAD,GAAA,EAAwC,cAAcK,EAAAA,GAA/BR,IAAcO,CAA4B;AAAA,EAAA,CAC1E,EACH,CAAA;AAAA,GAGaK,IAAAA,EAAAA,KAAKd,CAAS,GC9BhBe,IAAgDA,CAAC;AAAA,EAC5DC,UAAAA;AACF,MAAM;AACEC,QAAAA,IAAgBC,aAAWC,CAAa,IAAI;AAElD,SAAOF,IACLG,EAAaJ,aAAAA,GAAUC,CAAa,wCAEjCD,UAAAA,GAAS;AAEhB;"}