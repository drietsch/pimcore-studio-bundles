{"version":3,"file":"index-CZWJfSrl.js","sources":["../../../streamlit/frontend/lib/src/components/widgets/Selectbox/Selectbox.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { FC, memo, useCallback } from \"react\"\n\nimport { Selectbox as SelectboxProto } from \"@streamlit/lib/src/proto\"\nimport { WidgetStateManager } from \"@streamlit/lib/src/WidgetStateManager\"\nimport UISelectbox from \"@streamlit/lib/src/components/shared/Dropdown\"\nimport {\n  isNullOrUndefined,\n  labelVisibilityProtoValueToEnum,\n} from \"@streamlit/lib/src/util/utils\"\nimport {\n  useBasicWidgetState,\n  ValueWithSource,\n} from \"@streamlit/lib/src/hooks/useBasicWidgetState\"\n\nexport interface Props {\n  disabled: boolean\n  element: SelectboxProto\n  widgetMgr: WidgetStateManager\n  width: number\n  fragmentId?: string\n}\n\n/**\n * The value specified by the user via the UI. If the user didn't touch this\n * widget's UI, the default value is used.\n */\ntype SelectboxValue = number | null\n\nconst getStateFromWidgetMgr = (\n  widgetMgr: WidgetStateManager,\n  element: SelectboxProto\n): SelectboxValue | undefined => {\n  return widgetMgr.getIntValue(element)\n}\n\nconst getDefaultStateFromProto = (element: SelectboxProto): SelectboxValue => {\n  return element.default ?? null\n}\n\nconst getCurrStateFromProto = (element: SelectboxProto): SelectboxValue => {\n  return element.value ?? null\n}\n\nconst updateWidgetMgrState = (\n  element: SelectboxProto,\n  widgetMgr: WidgetStateManager,\n  valueWithSource: ValueWithSource<SelectboxValue>,\n  fragmentId?: string\n): void => {\n  widgetMgr.setIntValue(\n    element,\n    valueWithSource.value,\n    { fromUi: valueWithSource.fromUi },\n    fragmentId\n  )\n}\n\nconst Selectbox: FC<Props> = ({\n  disabled,\n  element,\n  widgetMgr,\n  width,\n  fragmentId,\n}) => {\n  const { options, help, label, labelVisibility, placeholder } = element\n\n  const [value, setValueWithSource] = useBasicWidgetState<\n    SelectboxValue,\n    SelectboxProto\n  >({\n    getStateFromWidgetMgr,\n    getDefaultStateFromProto,\n    getCurrStateFromProto,\n    updateWidgetMgrState,\n    element,\n    widgetMgr,\n    fragmentId,\n  })\n\n  const onChange = useCallback(\n    (value: SelectboxValue) => {\n      setValueWithSource({ value, fromUi: true })\n    },\n    [setValueWithSource]\n  )\n\n  const clearable = isNullOrUndefined(element.default) && !disabled\n\n  return (\n    <UISelectbox\n      label={label}\n      labelVisibility={labelVisibilityProtoValueToEnum(labelVisibility?.value)}\n      options={options}\n      disabled={disabled}\n      width={width}\n      onChange={onChange}\n      value={value}\n      help={help}\n      placeholder={placeholder}\n      clearable={clearable}\n    />\n  )\n}\n\nexport default memo(Selectbox)\n"],"names":["getStateFromWidgetMgr","widgetMgr","element","getIntValue","getDefaultStateFromProto","default","getCurrStateFromProto","value","updateWidgetMgrState","valueWithSource","fragmentId","setIntValue","fromUi","Selectbox","disabled","width","options","help","label","labelVisibility","placeholder","setValueWithSource","useBasicWidgetState","onChange","useCallback","clearable","isNullOrUndefined","jsx","UISelectbox","labelVisibilityProtoValueToEnum","memo"],"mappings":";;AA4CA,MAAMA,IAAwBA,CAC5BC,GACAC,MAEOD,EAAUE,YAAYD,CAAO,GAGhCE,IAA2BA,CAACF,MACzBA,EAAQG,WAAW,MAGtBC,IAAwBA,CAACJ,MACtBA,EAAQK,SAAS,MAGpBC,IAAuBA,CAC3BN,GACAD,GACAQ,GACAC,MACS;AACCC,EAAAA,EAAAA,YACRT,GACAO,EAAgBF,OAChB;AAAA,IAAEK,QAAQH,EAAgBG;AAAAA,KAC1BF,CACF;AACF,GAEMG,IAAuBA,CAAC;AAAA,EAC5BC,UAAAA;AAAAA,EACAZ,SAAAA;AAAAA,EACAD,WAAAA;AAAAA,EACAc,OAAAA;AAAAA,EACAL,YAAAA;AACF,MAAM;AACE,QAAA;AAAA,IAAEM,SAAAA;AAAAA,IAASC,MAAAA;AAAAA,IAAMC,OAAAA;AAAAA,IAAOC,iBAAAA;AAAAA,IAAiBC,aAAAA;AAAAA,EAAAA,IAAgBlB,GAEzD,CAACK,GAAOc,CAAkB,IAAIC,EAGlC;AAAA,IACAtB,uBAAAA;AAAAA,IACAI,0BAAAA;AAAAA,IACAE,uBAAAA;AAAAA,IACAE,sBAAAA;AAAAA,IACAN,SAAAA;AAAAA,IACAD,WAAAA;AAAAA,IACAS,YAAAA;AAAAA,EAAAA,CACD,GAEKa,IAAWC,cACf,CAACjB,MAA0B;AACN,IAAAc,EAAA;AAAA,MAAEd,OAAAA;AAAAA,MAAOK,QAAQ;AAAA,IAAA,CAAM;AAAA,EAAA,GAE5C,CAACS,CAAkB,CACrB,GAEMI,IAAYC,EAAkBxB,EAAQG,OAAO,KAAK,CAACS;AAEzD,SACGa,gBAAAA,EAAAA,IAAAC,GAAA,EACC,OAAAV,GACA,iBAAiBW,EAAgCV,GAAiBZ,KAAK,GACvE,SAAAS,GACA,UAAAF,GACA,OAAAC,GACA,UAAAQ,GACA,OAAAhB,GACA,MAAAU,GACA,aAAAG,GACA,WAAAK,GACA;AAEN,GAEeK,IAAAA,EAAAA,KAAKjB,CAAS;"}