{"version":3,"file":"index-DlTbqjMn.js","sources":["../../../streamlit/frontend/lib/src/components/elements/ImageList/styled-components.ts","../../../streamlit/frontend/lib/src/components/elements/ImageList/ImageList.tsx"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledImageList = styled.div(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  // Not supported in Safari, but at least it's not a regression for those users:\n  rowGap: theme.spacing.lg,\n  maxWidth: \"100%\",\n  width: \"fit-content\",\n}))\n\nexport const StyledImageContainer = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"stretch\",\n  width: \"auto\",\n  flexGrow: 0,\n})\n\nexport const StyledCaption = styled.div(({ theme }) => ({\n  fontFamily: theme.genericFonts.bodyFont,\n  fontSize: theme.fontSizes.sm,\n  color: theme.colors.fadedText60,\n  textAlign: \"center\",\n  marginTop: theme.spacing.xs,\n  wordWrap: \"break-word\",\n  padding: theme.spacing.threeXS,\n}))\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022-2024)\n * Copyright (c) Yuichiro Tachibana (Tsuchiya) (2022-2024)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { CSSProperties, ReactElement } from \"react\"\n\nimport {\n  ImageList as ImageListProto,\n  Image as ImageProto,\n} from \"@streamlit/lib/src/proto\"\nimport { StreamlitEndpoints } from \"@streamlit/lib/src/StreamlitEndpoints\"\nimport Toolbar, {\n  StyledToolbarElementContainer,\n} from \"@streamlit/lib/src/components/shared/Toolbar\"\nimport { ElementFullscreenContext } from \"@streamlit/lib/src/components/shared/ElementFullscreen/ElementFullscreenContext\"\nimport { useRequiredContext } from \"@streamlit/lib/src/hooks/useRequiredContext\"\nimport { withFullScreenWrapper } from \"@streamlit/lib/src/components/shared/FullScreenWrapper\"\n\nimport { useStliteMediaObjects } from \"@stlite/kernel\"\n\nimport {\n  StyledCaption,\n  StyledImageContainer,\n  StyledImageList,\n} from \"./styled-components\"\n\nexport interface ImageListProps {\n  endpoints: StreamlitEndpoints\n  width: number\n  element: ImageListProto\n  disableFullscreenMode?: boolean\n}\n\n/**\n * @see WidthBehavior on the Backend\n * @see the Image.proto file\n */\nenum WidthBehavior {\n  OriginalWidth = -1,\n  /** @deprecated */\n  ColumnWidth = -2,\n  /** @deprecated */\n  AutoWidth = -3,\n  MinImageOrContainer = -4,\n  MaxImageOrContainer = -5,\n}\n\n/**\n * Functional element for a horizontal list of images.\n */\nfunction ImageList({\n  element,\n  width,\n  endpoints,\n  disableFullscreenMode,\n}: Readonly<ImageListProps>): ReactElement {\n  const images = useStliteMediaObjects(element.imgs)\n\n  const {\n    expanded: isFullScreen,\n    width: fullScreenWidth,\n    height,\n    expand,\n    collapse,\n  } = useRequiredContext(ElementFullscreenContext)\n\n  // The width of the element is the width of the container, not necessarily the image.\n  const elementWidth: number = isFullScreen ? fullScreenWidth : width\n  // The width field in the proto sets the image width, but has special\n  // cases the values in the WidthBehavior enum.\n  let imageWidth: number | undefined\n  const protoWidth = element.width\n\n  if (\n    [\n      WidthBehavior.OriginalWidth,\n      WidthBehavior.AutoWidth,\n      WidthBehavior.MinImageOrContainer,\n    ].includes(protoWidth)\n  ) {\n    // Use the original image width.\n    imageWidth = undefined\n  } else if (\n    [WidthBehavior.ColumnWidth, WidthBehavior.MaxImageOrContainer].includes(\n      protoWidth\n    )\n  ) {\n    // Use the full element width (which handles the full screen case)\n    imageWidth = elementWidth\n  } else if (protoWidth > 0) {\n    // Set the image width explicitly.\n    imageWidth = protoWidth\n  } else {\n    throw Error(`Invalid image width: ${protoWidth}`)\n  }\n\n  const imgStyle: CSSProperties = {}\n\n  if (height && isFullScreen) {\n    imgStyle.maxHeight = height\n    imgStyle.objectFit = \"contain\"\n  } else {\n    imgStyle.width = imageWidth\n    // Cap the image width, so it doesn't exceed its parent container width\n    imgStyle.maxWidth = \"100%\"\n  }\n\n  return (\n    <StyledToolbarElementContainer\n      width={elementWidth}\n      height={height}\n      useContainerWidth={isFullScreen}\n      topCentered\n    >\n      <Toolbar\n        target={StyledToolbarElementContainer}\n        isFullScreen={isFullScreen}\n        onExpand={expand}\n        onCollapse={collapse}\n        disableFullscreenMode={disableFullscreenMode}\n      ></Toolbar>\n      <StyledImageList className=\"stImage\" data-testid=\"stImage\">\n        {images.map((iimage, idx): ReactElement => {\n          const image = iimage as ImageProto\n          return (\n            <StyledImageContainer data-testid=\"stImageContainer\" key={idx}>\n              <img\n                style={imgStyle}\n                src={endpoints.buildMediaURL(image.url)}\n                alt={idx.toString()}\n              />\n              {image.caption && (\n                <StyledCaption data-testid=\"stImageCaption\" style={imgStyle}>\n                  {` ${image.caption} `}\n                </StyledCaption>\n              )}\n            </StyledImageContainer>\n          )\n        })}\n      </StyledImageList>\n    </StyledToolbarElementContainer>\n  )\n}\n\nexport default withFullScreenWrapper(ImageList)\n"],"names":["StyledImageList","target","theme","display","flexDirection","flexWrap","rowGap","spacing","lg","maxWidth","width","StyledImageContainer","name","styles","StyledCaption","fontFamily","genericFonts","bodyFont","fontSize","fontSizes","sm","color","colors","fadedText60","textAlign","marginTop","xs","wordWrap","padding","threeXS","ImageList","element","endpoints","disableFullscreenMode","images","useStliteMediaObjects","imgs","expanded","isFullScreen","fullScreenWidth","height","expand","collapse","useRequiredContext","ElementFullscreenContext","elementWidth","imageWidth","protoWidth","WidthBehavior","includes","undefined","Error","imgStyle","maxHeight","objectFit","jsxs","StyledToolbarElementContainer","jsx","Toolbar","map","iimage","idx","image","buildMediaURL","url","toString","caption","withFullScreenWrapper"],"mappings":";;;AAkBaA,MAAAA,6BAAkB;AAAA,EAAAC,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEC,OAAAA;AAAM,OAAO;AAAA,EACxDC,SAAS;AAAA,EACTC,eAAe;AAAA,EACfC,UAAU;AAAA;AAAA,EAEVC,QAAQJ,EAAMK,QAAQC;AAAAA,EACtBC,UAAU;AAAA,EACVC,OAAO;AACT,IAAG,EAAA,GAEUC,6BAAuB;AAAA,EAAAV,QAAA;AAAA,CAAA,EAAA;AAAA,EAAAW,MAAA;AAAA,EAAAC,QAAA;AAAA,CAMnC,GAEYC,6BAAgB;AAAA,EAAAb,QAAA;AAAA,CAAA,EAAW,CAAC;AAAA,EAAEC,OAAAA;AAAM,OAAO;AAAA,EACtDa,YAAYb,EAAMc,aAAaC;AAAAA,EAC/BC,UAAUhB,EAAMiB,UAAUC;AAAAA,EAC1BC,OAAOnB,EAAMoB,OAAOC;AAAAA,EACpBC,WAAW;AAAA,EACXC,WAAWvB,EAAMK,QAAQmB;AAAAA,EACzBC,UAAU;AAAA,EACVC,SAAS1B,EAAMK,QAAQsB;AACzB,IAAG,EAAA;ACmBH,SAASC,EAAU;AAAA,EACjBC,SAAAA;AAAAA,EACArB,OAAAA;AAAAA,EACAsB,WAAAA;AAAAA,EACAC,uBAAAA;AACwB,GAAiB;AACnCC,QAAAA,IAASC,EAAsBJ,EAAQK,IAAI,GAE3C;AAAA,IACJC,UAAUC;AAAAA,IACV5B,OAAO6B;AAAAA,IACPC,QAAAA;AAAAA,IACAC,QAAAA;AAAAA,IACAC,UAAAA;AAAAA,EAAAA,IACEC,EAAmBC,CAAwB,GAGzCC,IAAuBP,IAAeC,IAAkB7B;AAG1DoC,MAAAA;AACJ,QAAMC,IAAahB,EAAQrB;AAE3B,MACE;AAAA,IACEsC;AAAAA,IACAA;AAAAA,IACAA;AAAAA;AAAAA,IACAC,SAASF,CAAU;AAGRG,IAAAA,IAAAA;AAAAA,WAEb;AAAA,IAACF;AAAAA,IAA2BA;AAAAA;AAAAA,EAAmCC,EAAAA,SAC7DF,CACF;AAGaF,IAAAA,IAAAA;AAAAA,WACJE,IAAa;AAETA,IAAAA,IAAAA;AAAAA;AAEPI,UAAAA,MAAM,wBAAwBJ,CAAU,EAAE;AAGlD,QAAMK,IAA0B,CAAC;AAEjC,SAAIZ,KAAUF,KACZc,EAASC,YAAYb,GACrBY,EAASE,YAAY,cAErBF,EAAS1C,QAAQoC,GAEjBM,EAAS3C,WAAW,SAIpB8C,gBAAAA,OAACC,KACC,OAAOX,GACP,QAAAL,GACA,mBAAmBF,GACnB,aAAW,IAEX,UAAA;AAAA,IAACmB,gBAAAA,EAAAA,IAAAC,GAAA,EACC,QAAQF,GACR,cAAAlB,GACA,UAAUG,GACV,YAAYC,GACZ,uBAAAT,EACD,CAAA;AAAA,IACDwB,gBAAAA,EAAAA,IAACzD,GAAgB,EAAA,WAAU,WAAU,eAAY,WAC9CkC,UAAOyB,EAAAA,IAAI,CAACC,GAAQC,MAAsB;AACzC,YAAMC,IAAQF;AAEZ,aAAAL,gBAAAA,EAAA,KAAC5C,GAAqB,EAAA,eAAY,oBAChC,UAAA;AAAA,QAAA8C,gBAAAA,EAAAA,IAAC,OACC,EAAA,OAAOL,GACP,KAAKpB,EAAU+B,cAAcD,EAAME,GAAG,GACtC,KAAKH,EAAII,SAAW,EAAA,CAAA;AAAA,QAErBH,EAAMI,WACLT,gBAAAA,EAAA,IAAC3C,GAAc,EAAA,eAAY,kBAAiB,OAAOsC,GAChD,UAAA,IAAIU,EAAMI,OAAO,IACpB,CAAA;AAAA,MAAA,EAAA,GATsDL,CAW1D;AAAA,IAAA,CAEH,EACH,CAAA;AAAA,EAAA,GACF;AAEJ;AAEA,MAAeM,IAAAA,EAAsBrC,CAAS;"}